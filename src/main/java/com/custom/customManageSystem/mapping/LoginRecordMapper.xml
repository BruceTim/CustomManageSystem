<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.custom.customManageSystem.dao.ILoginRecordDao">
  <resultMap id="LoginRecord" type="com.custom.customManageSystem.model.LoginRecord">
    <id column="recordid" jdbcType="INTEGER" property="recordid" />
    <result column="logintime" property="logintime" />
    <result column="ipaddress" jdbcType="VARCHAR" property="ipaddress" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
	<result column="uname" property="uname" jdbcType="VARCHAR" />
	<result column="urole" property="urole" jdbcType="INTEGER" />
	<result column="upwd" property="upwd" jdbcType="VARCHAR" />
	<result column="role" property="role" jdbcType="INTEGER" />
	<result column="lasttime" property="lasttime" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectCountByUname" resultType="java.lang.Integer">
    select 
    count(*) 
    from loginrecord  
    where 1 = 1 
    <if test="uname != null and '' != uname">
    	and uname LIKE CONCAT(CONCAT('%',#{uname,jdbcType=VARCHAR}),'%') 
    </if>
  </select>
  
  <select id="selectByUnamePage" resultMap="LoginRecord">
    select 
    lr.recordid, 
    lr.uid as userid, 
    lr.logintime, 
    lr.ipaddress, 
    lr.uid, 
    lr.uname, 
    lr.urole 
    from loginrecord lr 
    where 1 = 1 
    <if test="uname != null and '' != uname">
    	and lr.uname LIKE CONCAT(CONCAT('%', #{uname, jdbcType=VARCHAR}), '%')
    </if>
    order by lr.logintime desc 
    limit #{page.dbIndex, jdbcType=INTEGER}, #{page.size, jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loginrecord
    where recordid = #{recordid,jdbcType=INTEGER} 
  </delete>
  
  <delete id="deleteMoreByPrimaryKey" parameterType="java.lang.Integer">
    delete from loginrecord
    where recordid in 
    <foreach collection="array" item="recordid" index="index" open="(" separator="," close=")">
    	#{recordid}
    </foreach>
  </delete>
  
  <insert id="insert" parameterType="com.custom.customManageSystem.model.LoginRecord">
    insert into loginrecord (recordid, uid, uname, urole, logintime, 
      ipaddress)
    values (#{recordid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR},
    	#{urole,jdbcType=INTEGER}, #{logintime}, #{ipaddress,jdbcType=VARCHAR})
  </insert>
  
</mapper>