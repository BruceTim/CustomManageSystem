<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.custom.customManageSystem.dao.IUserDao" >
  <resultMap id="User" type="com.custom.customManageSystem.model.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="upwd" property="upwd" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="INTEGER" />
    <result column="lasttime" property="lasttime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    uid, uname, upwd, role, lasttime
  </sql>
  <select id="selectByPrimaryKey" resultMap="User" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByName" resultMap="User" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uname = #{uname,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAll" resultMap="User" >
    select 
    <include refid="Base_Column_List" />
    from user
  </select>
  
  <select id="login" resultMap="User" parameterType="com.custom.customManageSystem.model.User" >
    select 
    <include refid="Base_Column_List" />
    from user
    where uname = #{uname,jdbcType=VARCHAR} 
    and upwd = #{upwd,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteMoreByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where uid in 
    <foreach collection="array" item="uid" index="index" open="(" separator="," close=")">
    	#{uid}
    </foreach>
  </delete>
  
  <insert id="insert" parameterType="com.custom.customManageSystem.model.User">
    insert into user (uid, uname, upwd, 
      role, lasttime)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{upwd,jdbcType=VARCHAR}, 
      #{role,jdbcType=INTEGER}, #{lasttime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.custom.customManageSystem.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="upwd != null" >
        upwd,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null" >
        #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.custom.customManageSystem.model.User" >
    update user
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="upwd != null" >
        upwd = #{upwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.custom.customManageSystem.model.User" >
    update user
    set uname = #{uname,jdbcType=VARCHAR},
      upwd = #{upwd,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      lasttime = #{lasttime,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>